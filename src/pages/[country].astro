---
import CountryLi from '../components/CountryLi.astro'
import Layout from '../layouts/Layout.astro'
import data from '../mocks/countries-data.json'

export function getStaticPaths() {
  const countries = data.map((country) => {
    return {
      name: country.name.common,
      nativeName: country.name.nativeName,
      population: country.population,
      region: country.region,
      imageAlt: country.flags.alt,
      flagSvg: country.flags.svg,
      subRegion: country.subregion,
      capital: country.capital,
      topLevelDomain: country.tld,
      currencies: country.currencies,
      languages: country.languages,
      borders: country.borders,
    }
  })
  return countries.map((country) => {
    return {
      params: { country: country.name },
      props: { countryData: country },
    }
  })
}

const { country } = Astro.params
const {
  countryData: {
    nativeName: countryNativeName,
    population,
    region,
    flagSvg,
    imageAlt,
    subRegion,
    capital: oficialCapital,
    topLevelDomain,
    currencies,
    languages: officialLanguages,
    borders: officialBorders,
  },
} = Astro.props

const nativeName = countryNativeName
  ? Object.values(countryNativeName).at(-1).official
  : null

const currency = currencies ? Object.entries(currencies)[0][1].name : null
const languages = officialLanguages
  ? Object.values(officialLanguages).join()
  : null
const borders = officialBorders?.map((border) => {
  const country = data?.find((country) => country.cca3 === border)
  return country ? country.name.common : null
})
const capital = oficialCapital ? Object.values(oficialCapital) : null
---

<Layout title={country} icon={flagSvg}>
  <main class="mx-8 mb-4 lg:mx-52 lg:mb-0">
    <a
      href="/"
      class="my-4 lg:my-14 inline-block bg-dark-text-light-elements-color dark:bg-dark-elements-color shadow-xl px-8 py-3 rounded"
      >Go Back</a
    >
    <section class="lg:grid lg:grid-row lg:grid-cols-2 lg:gap-5">
      <img
        src={flagSvg}
        alt={imageAlt}
        class="w-full my-4 lg:h-[350px] lg:w-auto lg:my-0"
      />
      <article class="flex flex-col w-full">
        <h1 class="text-4xl">{country}</h1>
        <ul class="flex flex-row md:flex-col flex-wrap gap-3 h-[200px] my-4">
          <CountryLi title="Native Name" text={nativeName ?? 'None'} />
          <CountryLi title="Population" text={population} />
          <CountryLi title="Region" text={region} />
          <CountryLi title="Sub Region" text={subRegion ?? 'None'} />
          <CountryLi title="Capital" text={capital ?? 'None'} />
          <CountryLi title="Top level domain" text={topLevelDomain} />
          <CountryLi title="Currency" text={currency ?? 'None'} />
          <CountryLi title="Languages:" text={languages ?? 'None'} />
        </ul>
        {
          borders && (
            <div class="w-full">
              <h3 class="font-bold inline">Borders Countries :</h3>
              <ul class="inline">
                {borders.map((border) => (
                  <li class="inline-block bg-dark-text-light-elements-color hover:bg-slate-200 dark:bg-dark-elements-color dark:hover:bg-dark-background-color transition-colors duration-300 shadow-xl px-4 py-1 m-1 rounded">
                    <a href={`/${border}`}>{border}</a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </article>
    </section>
  </main>
</Layout>
